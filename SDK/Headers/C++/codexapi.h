/* ========================================================================== 
   Copyright(c) 1992-2002 MimarSinan International. All rights reserved.      
   This source code provided for demonstrative use only. All rights reserved. 
   ========================================================================== */

// Installation Functions
typedef VOID   (CALLBACK * LPBINDPLUGIN) (LPCTSTR, LPCTSTR);
typedef VOID   (CALLBACK * LPUNBINDPLUGIN) (LPCTSTR, LPCTSTR);

// Archive Functions
typedef LPCTSTR (CALLBACK * LPGETCOMPRESSIBLEARCHIVES)(VOID);
typedef LPCTSTR (CALLBACK * LPGETEXTRACTABLEARCHIVES)(VOID);
typedef LPCTSTR (CALLBACK * LPGETSUPPORTEDARCHIVES)(VOID);
typedef LPTSTR (CALLBACK * LPQUERYARCHIVE)(LPCTSTR,LPTSTR,LPTSTR,LPTSTR,LPTSTR,LPTSTR);
typedef VOID (CALLBACK * LPCREATEMERGEDARCHIVE)(LPCTSTR,LPCTSTR,LPCTSTR,LPCTSTR);
typedef VOID (CALLBACK * LPCREATESINGULARARCHIVES)(LPCTSTR,LPCTSTR,LPCTSTR,LPCTSTR);
typedef VOID (CALLBACK * LPEXTRACTARCHIVE)(LPCTSTR,LPCTSTR,LPCTSTR,LPCTSTR);
typedef VOID (CALLBACK * LPINSTALLARCHIVE)(LPCTSTR);
typedef VOID (CALLBACK * LPCHECKOUTARCHIVE)(LPCTSTR,LPCTSTR,LPCTSTR);
typedef VOID (CALLBACK * LPCONVERTARCHIVE)(LPCTSTR,LPCTSTR);
typedef VOID (CALLBACK * LPVIEWUPDATEARCHIVE)(LPCTSTR,LPCTSTR,BOOL);
typedef LPCTSTR (CALLBACK * LPGETARCHIVETOOLS)(LPCTSTR);
typedef LPCTSTR (CALLBACK * LPGETARCHIVETOOLHINTS)(LPCTSTR);
typedef VOID (CALLBACK * LPRUNARCHIVETOOL)(LPCTSTR,LPCTSTR,LPCTSTR);

// Archive Profile Functions
typedef LPCTSTR (CALLBACK * LPGETCOMPRESSIONPROFILES)(LPCTSTR);
typedef LPCTSTR (CALLBACK * LPGETEXTRACTIONPROFILES)(LPCTSTR);
typedef VOID (CALLBACK * LPEDITCOMPRESSIONPROFILE)(LPCTSTR,LPCTSTR);
typedef VOID (CALLBACK * LPEDITEXTRACTIONPROFILE)(LPCTSTR,LPCTSTR);
typedef VOID (CALLBACK * LPDELETECOMPRESSIONPROFILE)(LPCTSTR,LPCTSTR);
typedef VOID (CALLBACK * LPDELETEEXTRACTIONPROFILE)(LPCTSTR,LPCTSTR);

// Plug-In Functions
typedef INT    (CALLBACK * LPLOADPLUGINS) (VOID );
typedef VOID   (CALLBACK * LPFREEPLUGINS) (VOID );
typedef LPTSTR (CALLBACK * LPGETPLUGINS) (VOID);
typedef VOID   (CALLBACK * LPSHOWPLUGINABOUT) (LPCTSTR);
typedef LPTSTR (CALLBACK * LPGETARCHIVES) (VOID);
typedef LPCTSTR (CALLBACK *LPGETARCHIVESBYPLUGIN) (LPCTSTR);
typedef LPCTSTR (CALLBACK *LPGETARCHIVEFUNCTIONSBYPLUGIN) (LPCTSTR,LPCTSTR);

// Common Dialog Functions
typedef VOID   (CALLBACK * LPSTARTSPLASH) (LPCTSTR,LPCTSTR);
typedef VOID   (CALLBACK * LPENDSPLASH) (VOID);
typedef VOID   (CALLBACK * LPCODEXABOUT) (HICON,LPCTSTR,LPCTSTR,LPCTSTR,LPCTSTR,LPCTSTR);
// LPEDITCODEXASSOCIATIONS
typedef BOOL   (CALLBACK * LPEDITPLUGINBINDINGS) (VOID);

// Shell Functions
typedef VOID   (CALLBACK * LPCHECKCODEXASSOCIATIONS) (VOID );
typedef SHORT  (CALLBACK * LPFORCECODEXASSOCIATIONS) (VOID );
typedef LPCTSTR (CALLBACK *LPGETGENERICVIEWER) (VOID);
typedef VOID (CALLBACK *LPSETGENERICVIEWER) (LPCTSTR);
typedef VOID (CALLBACK *LPREGISTERCODEXAPPLICATION) (LPCTSTR,LPCTSTR,LPCTSTR);
typedef VOID (CALLBACK *LPERASEWORKINGFILES) (VOID);

// Convenience functions specific to this CodexAPI C/C++ interface
BOOL IsExtractable( LPCTSTR );